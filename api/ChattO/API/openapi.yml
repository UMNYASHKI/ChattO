openapi: 3.0.1
info:
  title: 'API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /api/Account/Login:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/GoogleLogin:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/signin-google:
    get:
      tags:
        - Account
      parameters:
        - name: remoteError
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Account/Logout:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Billing:
    post:
      tags:
        - Billing
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateBillingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBillingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateBillingRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - Billing
      parameters:
        - name: OrganizationId
          in: query
          schema:
            type: string
            format: uuid
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Billing/{id}':
    get:
      tags:
        - Billing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BillingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BillingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/BillingInfo:
    post:
      tags:
        - BillingInfo
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateBillingInfoRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingInfoRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBillingInfoRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateBillingInfoRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - BillingInfo
      parameters:
        - name: Type
          in: query
          schema:
            $ref: '#/components/schemas/BillingType'
        - name: MinPrice
          in: query
          schema:
            type: number
            format: double
        - name: MaxPrice
          in: query
          schema:
            type: number
            format: double
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingInfoResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingInfoResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingInfoResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/BillingInfo/{id}':
    get:
      tags:
        - BillingInfo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingInfoResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BillingInfoResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Feed:
    post:
      tags:
        - Feed
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateFeedRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateFeedRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateFeedRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - Feed
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Description
          in: query
          schema:
            type: string
        - name: Type
          in: query
          schema:
            $ref: '#/components/schemas/FeedType'
        - name: GroupId
          in: query
          schema:
            type: string
            format: uuid
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Feed/{id}':
    get:
      tags:
        - Feed
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeedResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - Feed
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Feed
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Group:
    post:
      tags:
        - Group
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - Group
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: OrganizationId
          in: query
          schema:
            type: string
            format: uuid
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Group/{id}':
    get:
      tags:
        - Group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - Group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Organization:
    post:
      tags:
        - Organization
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - Organization
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Domain
          in: query
          schema:
            type: string
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDetailsOrganizationResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDetailsOrganizationResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDetailsOrganizationResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Organization/{id}':
    get:
      tags:
        - Organization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetDetailsOrganizationResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetDetailsOrganizationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetDetailsOrganizationResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Organization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
    put:
      tags:
        - Organization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
  /api/Ticket:
    post:
      tags:
        - Ticket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - Ticket
      parameters:
        - name: Text
          in: query
          schema:
            type: string
        - name: SentAt
          in: query
          schema:
            type: string
            format: date-time
        - name: Theme
          in: query
          schema:
            $ref: '#/components/schemas/TicketTheme'
        - name: AppUserId
          in: query
          schema:
            type: string
            format: uuid
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Ticket/{id}':
    get:
      tags:
        - Ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketDetailsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketDetailsResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - Ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAccountsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAccountsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAccountsRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/User/{id}':
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/GetUsersInSystem:
    get:
      tags:
        - User
      parameters:
        - name: GroupId
          in: query
          schema:
            type: string
            format: uuid
        - name: UserName
          in: query
          schema:
            type: string
        - name: AppUserRole
          in: query
          schema:
            $ref: '#/components/schemas/AppUserRole'
        - name: Email
          in: query
          schema:
            type: string
        - name: OrganizationId
          in: query
          schema:
            type: string
            format: uuid
        - name: IsEmailSent
          in: query
          schema:
            type: boolean
        - name: DisplayName
          in: query
          schema:
            type: string
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/GetUsersInsideOrganization:
    get:
      tags:
        - User
      parameters:
        - name: GroupId
          in: query
          schema:
            type: string
            format: uuid
        - name: UserName
          in: query
          schema:
            type: string
        - name: AppUserRole
          in: query
          schema:
            $ref: '#/components/schemas/AppUserRole'
        - name: Email
          in: query
          schema:
            type: string
        - name: OrganizationId
          in: query
          schema:
            type: string
            format: uuid
        - name: IsEmailSent
          in: query
          schema:
            type: boolean
        - name: DisplayName
          in: query
          schema:
            type: string
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/User/GetUsersByName:
    get:
      tags:
        - User
      parameters:
        - name: DisplayName
          in: query
          schema:
            type: string
        - name: ColumnName
          in: query
          schema:
            type: string
        - name: Descending
          in: query
          schema:
            type: boolean
        - name: PageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '500':
          description: Server Error
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/ws:
    get:
      tags:
        - WebSocket
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
components:
  schemas:
    AppUserGroupResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        isModerator:
          type: boolean
        groupId:
          type: string
          format: uuid
      additionalProperties: false
    AppUserRole:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    BillingInfoResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/BillingType'
        price:
          type: number
          format: double
      additionalProperties: false
    BillingResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        organizationId:
          type: string
          format: uuid
        billingInfo:
          $ref: '#/components/schemas/BillingInfoResponse'
      additionalProperties: false
    BillingType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    CreateAccountRequest:
      required:
        - email
        - userName
      type: object
      properties:
        userName:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
          format: email
      additionalProperties: false
    CreateAccountsRequest:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/CreateAccountRequest'
          nullable: true
        appUserRole:
          $ref: '#/components/schemas/AppUserRole'
        organizationId:
          type: string
          format: uuid
      additionalProperties: false
    CreateBillingInfoRequest:
      required:
        - price
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BillingType'
        price:
          type: number
          format: double
      additionalProperties: false
    CreateBillingRequest:
      type: object
      properties:
        organizationId:
          type: string
          format: uuid
        billingInfoId:
          type: string
          format: uuid
      additionalProperties: false
    CreateFeedRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/FeedType'
        groupId:
          type: string
          format: uuid
          nullable: true
        appUsersId:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    CreateGroupRequest:
      required:
        - name
        - organizationId
      type: object
      properties:
        name:
          minLength: 1
          type: string
        organizationId:
          type: string
          format: uuid
        usersId:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    CreateOrganizationRequest:
      required:
        - domain
        - email
        - name
        - password
        - userName
      type: object
      properties:
        name:
          minLength: 1
          type: string
        domain:
          minLength: 1
          type: string
        userName:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
          format: email
        password:
          minLength: 1
          type: string
          format: password
      additionalProperties: false
    CreateTicketRequest:
      type: object
      properties:
        text:
          type: string
          nullable: true
        theme:
          $ref: '#/components/schemas/TicketTheme'
      additionalProperties: false
    FeedAppUserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        isModerator:
          type: boolean
        isCreator:
          type: boolean
      additionalProperties: false
    FeedResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/FeedType'
        groupId:
          type: string
          format: uuid
          nullable: true
        feedImageUrl:
          type: string
          nullable: true
        appUsers:
          type: array
          items:
            $ref: '#/components/schemas/FeedAppUserResponse'
          nullable: true
      additionalProperties: false
    FeedType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    FileResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    GetDetailsOrganizationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        domain:
          type: string
          nullable: true
      additionalProperties: false
    GroupResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/AppUserGroupResponse'
          nullable: true
      additionalProperties: false
    LoginRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      additionalProperties: false
    Operation:
      type: object
      properties:
        operationType:
          $ref: '#/components/schemas/OperationType'
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    OperationType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    TicketDetailsResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
          nullable: true
        sentAt:
          type: string
          format: date-time
        theme:
          $ref: '#/components/schemas/TicketTheme'
        status:
          $ref: '#/components/schemas/TicketStatus'
        appUser:
          $ref: '#/components/schemas/UserResponse'
      additionalProperties: false
    TicketResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
          nullable: true
        sentAt:
          type: string
          format: date-time
        theme:
          $ref: '#/components/schemas/TicketTheme'
        status:
          $ref: '#/components/schemas/TicketStatus'
      additionalProperties: false
    TicketStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    TicketTheme:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    UpdateOrganizationRequest:
      required:
        - domain
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        domain:
          minLength: 1
          type: string
      additionalProperties: false
    UserDetailsResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/AppUserRole'
        isEmailSent:
          type: boolean
        organization:
          $ref: '#/components/schemas/GetDetailsOrganizationResponse'
        profileImage:
          $ref: '#/components/schemas/FileResponse'
      additionalProperties: false
    UserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/AppUserRole'
        isEmailSent:
          type: boolean
        profileImage:
          $ref: '#/components/schemas/FileResponse'
      additionalProperties: false